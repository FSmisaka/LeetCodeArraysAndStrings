题目：
给你一个由 正整数 组成的数组 nums。
如果数组中的某个子数组满足下述条件，则称之为 完全子数组：
     子数组中 不同 元素的数目等于整个数组不同元素的数目。
返回数组中 完全子数组 的数目。

样例01:
输入：nums = [1,3,1,2,2]
输出：4
解释：完全子数组有：[1,3,1,2]、[1,3,1,2,2]、[3,1,2] 和 [3,1,2,2] 。

% 经典滑动窗口
·AC代码
class Solution:
    def countCompleteSubarrays(self, nums: List[int]) -> int:
        n = len(set(nums))
        ans = 0
        left = 0
        for right, x in enumerate(nums):
            while len(set(nums[left:right+1])) == n:
                left += 1
            ans += left
        return ans
        
% 最精髓的，目前阶段的我想不到的，是「ans += left」
  因为我之前做过的滑动窗口都是「ans += 1」（放在while循环内）
  太巧妙了
