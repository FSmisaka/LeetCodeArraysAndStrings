题目：给定一个非负索引 rowIndex，返回「杨辉三角」的第 rowIndex 行

样例01:
输入: rowIndex = 3
输出: [1,3,3,1]

% 递推
  很容易想到递推，但是往往会忽略空间复杂度的问题，开很多数组。
  本题目可以滚动数组使得额外空间复杂度仅为O(1)
·AC代码
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        ans = [1 for i in range(rowIndex+1)]
        for i in range(1,rowIndex):
            for j in range(i):
                ans[i-j] = ans[i-j-1] + ans[i-j]
        return ans

% 也可以直接利用组合数计算
·AC代码
class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        if rowIndex == 0:
            return [1]
        ans = [1]
        for i in range(1,rowIndex):
            a, b = 1, 1
            tempR, tempI = rowIndex, i
            for j in range(i):
                a *= tempR
                b *= tempI
                tempR -= 1
                tempI -= 1
            ans.append(int(a/b))
        ans.append(1)
        return ans
